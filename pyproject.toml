[project]
name = "autoware-mcp"
version = "0.1.0"
description = "Model Context Protocol server for Autoware autonomous driving stack - passive observation and interaction interface"
authors = [
    { name = "aeon", email = "jerry73204@gmail.com" }
]
dependencies = [
    "fastmcp>=0.1.0",
    "pydantic>=2.0.0",
    "pyyaml>=6.0",
    "psutil>=5.9.0",
    "aiohttp>=3.8.0",
    "numpy>=1.24.0",
    "opencv-python>=4.11.0.86",
    "scipy>=1.15.3",
]
readme = "README.md"
requires-python = ">= 3.10"

[project.scripts]
autoware-mcp = "autoware_mcp.__main__:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "lark-parser>=0.12.0",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/autoware_mcp"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
asyncio_mode = "auto"

# Note: With uv, scripts can be run using: uv run <command>
# For convenience, you can create shell aliases or use these directly:
# uv run pytest
# uv run pytest -v
# uv run pytest --cov=autoware_mcp --cov-report=term-missing
# uv run pytest -m unit
# uv run pytest tests/test_integration_autonomous_drive.py
